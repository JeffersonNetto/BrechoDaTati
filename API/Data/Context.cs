// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using API.Models;

#nullable disable

namespace API.Data
{
    public partial class Context : DbContext
    {
        public Context()
        {
        }

        public Context(DbContextOptions<Context> options)
            : base(options)
        {
        }

        public virtual DbSet<Categoria> Categoria { get; set; }
        public virtual DbSet<Cliente> Cliente { get; set; }
        public virtual DbSet<ClienteEndereco> ClienteEndereco { get; set; }
        public virtual DbSet<ClienteProdutoFavorito> ClienteProdutoFavorito { get; set; }
        public virtual DbSet<Condicao> Condicao { get; set; }
        public virtual DbSet<Cupom> Cupom { get; set; }
        public virtual DbSet<Manga> Manga { get; set; }
        public virtual DbSet<Marca> Marca { get; set; }
        public virtual DbSet<Modelagem> Modelagem { get; set; }
        public virtual DbSet<Pedido> Pedido { get; set; }
        public virtual DbSet<PedidoItem> PedidoItem { get; set; }
        public virtual DbSet<Produto> Produto { get; set; }
        public virtual DbSet<ProdutoImagem> ProdutoImagem { get; set; }
        public virtual DbSet<StatusPedido> StatusPedido { get; set; }
        public virtual DbSet<Tamanho> Tamanho { get; set; }
        public virtual DbSet<Tecido> Tecido { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "Latin1_General_CI_AS");

            modelBuilder.Entity<Categoria>(entity =>
            {
                entity.Property(e => e.DataCriacao).HasColumnType("datetime");

                entity.Property(e => e.Nome)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Cliente>(entity =>
            {
                entity.HasIndex(e => e.Cpf, "UQ_Cpf")
                    .IsUnique();

                entity.HasIndex(e => e.Email, "UQ_Email")
                    .IsUnique();

                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.Celular)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.Cpf)
                    .IsRequired()
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.DataCriacao).HasColumnType("datetime");

                entity.Property(e => e.DataNascimento).HasColumnType("date");

                entity.Property(e => e.Email)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Nome)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.Senha)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Sobrenome)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<ClienteEndereco>(entity =>
            {
                entity.Property(e => e.Bairro)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Cep)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.Cidade)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Complemento)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.DataCriacao).HasColumnType("datetime");

                entity.Property(e => e.Logradouro)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.Uf)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("UF")
                    .IsFixedLength(true);

                entity.HasOne(d => d.Cliente)
                    .WithMany(p => p.ClienteEndereco)
                    .HasForeignKey(d => d.ClienteId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ClienteEndereco_Cliente");
            });

            modelBuilder.Entity<ClienteProdutoFavorito>(entity =>
            {
                entity.HasKey(e => new { e.ClienteId, e.ProdutoId });

                entity.HasOne(d => d.Cliente)
                    .WithMany(p => p.ClienteProdutoFavorito)
                    .HasForeignKey(d => d.ClienteId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ClienteProdutoFavorito_Cliente");

                entity.HasOne(d => d.Produto)
                    .WithMany(p => p.ClienteProdutoFavorito)
                    .HasForeignKey(d => d.ProdutoId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ClienteProdutoFavorito_Produto");
            });

            modelBuilder.Entity<Condicao>(entity =>
            {
                entity.Property(e => e.DataCriacao).HasColumnType("datetime");

                entity.Property(e => e.Descricao)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Cupom>(entity =>
            {
                entity.Property(e => e.DataFim).HasColumnType("datetime");

                entity.Property(e => e.DataInicio).HasColumnType("datetime");

                entity.Property(e => e.Descricao)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Manga>(entity =>
            {
                entity.Property(e => e.DataCriacao).HasColumnType("datetime");

                entity.Property(e => e.Descricao)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Marca>(entity =>
            {
                entity.Property(e => e.DataCriacao).HasColumnType("datetime");

                entity.Property(e => e.Nome)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Modelagem>(entity =>
            {
                entity.Property(e => e.DataCriacao).HasColumnType("datetime");

                entity.Property(e => e.Descricao)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Pedido>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.DataCriacao).HasColumnType("datetime");

                entity.HasOne(d => d.Cliente)
                    .WithMany(p => p.Pedido)
                    .HasForeignKey(d => d.ClienteId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Pedido_Cliente");

                entity.HasOne(d => d.Cupom)
                    .WithMany(p => p.Pedido)
                    .HasForeignKey(d => d.CupomId)
                    .HasConstraintName("FK_Pedido_Cupom");

                entity.HasOne(d => d.Status)
                    .WithMany(p => p.Pedido)
                    .HasForeignKey(d => d.StatusId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Pedido_StatusPedido");
            });

            modelBuilder.Entity<PedidoItem>(entity =>
            {
                entity.HasKey(e => new { e.PedidoId, e.ProdutoId });

                entity.Property(e => e.ValorUnitario).HasColumnType("decimal(8, 2)");

                entity.Property(e => e.ValorUnitarioPago).HasColumnType("decimal(8, 2)");

                entity.HasOne(d => d.Pedido)
                    .WithMany(p => p.PedidoItem)
                    .HasForeignKey(d => d.PedidoId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_PedidoItem_Pedido");

                entity.HasOne(d => d.Produto)
                    .WithMany(p => p.PedidoItem)
                    .HasForeignKey(d => d.ProdutoId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_PedidoItem_Produto");
            });

            modelBuilder.Entity<Produto>(entity =>
            {
                entity.HasIndex(e => e.CategoriaId, "IX_Produto_CategoriaId");

                entity.HasIndex(e => e.CondicaoId, "IX_Produto_CondicaoId");

                entity.HasIndex(e => e.MangaId, "IX_Produto_MangaId");

                entity.HasIndex(e => e.MarcaId, "IX_Produto_MarcaId");

                entity.HasIndex(e => e.ModelagemId, "IX_Produto_ModelagemId");

                entity.HasIndex(e => e.TamanhoId, "IX_Produto_TamanhoId");

                entity.HasIndex(e => e.TecidoId, "IX_Produto_TecidoId");

                entity.HasIndex(e => e.Slug, "UQ_Slug")
                    .IsUnique();

                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.Cor)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.DataCriacao).HasColumnType("datetime");

                entity.Property(e => e.Descricao)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.ImagemPrincipal)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Medidas)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Nome)
                    .IsRequired()
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.Observacoes)
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.Slug)
                    .IsRequired()
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.ValorCompra).HasColumnType("decimal(8, 2)");

                entity.Property(e => e.ValorPromocional).HasColumnType("decimal(8, 2)");

                entity.Property(e => e.ValorVenda).HasColumnType("decimal(8, 2)");

                entity.HasOne(d => d.Categoria)
                    .WithMany(p => p.Produto)
                    .HasForeignKey(d => d.CategoriaId)
                    .HasConstraintName("FK_Produto_Categoria");

                entity.HasOne(d => d.Condicao)
                    .WithMany(p => p.Produto)
                    .HasForeignKey(d => d.CondicaoId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Produto_Condicao");

                entity.HasOne(d => d.Manga)
                    .WithMany(p => p.Produto)
                    .HasForeignKey(d => d.MangaId)
                    .HasConstraintName("FK_Produto_Manga");

                entity.HasOne(d => d.Marca)
                    .WithMany(p => p.Produto)
                    .HasForeignKey(d => d.MarcaId)
                    .HasConstraintName("FK_Produto_Marca");

                entity.HasOne(d => d.Modelagem)
                    .WithMany(p => p.Produto)
                    .HasForeignKey(d => d.ModelagemId)
                    .HasConstraintName("FK_Produto_Modelagem");

                entity.HasOne(d => d.Tamanho)
                    .WithMany(p => p.Produto)
                    .HasForeignKey(d => d.TamanhoId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Produto_Tamanho");

                entity.HasOne(d => d.Tecido)
                    .WithMany(p => p.Produto)
                    .HasForeignKey(d => d.TecidoId)
                    .HasConstraintName("FK_Produto_Tecido");
            });

            modelBuilder.Entity<ProdutoImagem>(entity =>
            {
                entity.HasKey(e => e.Imagem);

                entity.Property(e => e.Imagem)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.Produto)
                    .WithMany(p => p.ProdutoImagem)
                    .HasForeignKey(d => d.ProdutoId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ProdutoImagem_Produto");
            });

            modelBuilder.Entity<StatusPedido>(entity =>
            {
                entity.Property(e => e.Descricao)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Tamanho>(entity =>
            {
                entity.HasIndex(e => e.Descricao, "UQ__Tamanho__008BA9EF2E2004D4")
                    .IsUnique();

                entity.Property(e => e.DataCriacao).HasColumnType("datetime");

                entity.Property(e => e.Descricao)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Tecido>(entity =>
            {
                entity.Property(e => e.DataCriacao).HasColumnType("datetime");

                entity.Property(e => e.Descricao)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}